"""
Django settings for Django_template_practice1 project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

import os
from datetime import timedelta
from Tools.scripts.win_add2path import DEFAULT
from os.path import join
from django.core.wsgi import get_wsgi_application

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
DATE_INPUT_FORMATS = ('%d/%m/%Y','%d-%m-%Y','%Y-%m-%d')
LOGIN_REDIRECT_URL = '/admin/'
LOGOUT_REDIRECT_URL = '/admin/'
LOGIN_URL = '/admin/login/'
BREADCRUMBS_HOME_LABEL = 'Trang chủ'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-px%rrzlileo+get_6uyxne^iq*&25wwrv4b@b3q0^vkm!=qzky'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ['*']
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 'django.contrib.humanize', #Format number: 4500000 becomes 4,500,000 | 4500.2 becomes 4,500.2 | 450000 becomes '450.000'
    # 'django_bootstrap_breadcrumbs',
    # 'view_breadcrumbs', #Step Menu

    'user_app',    #modules 1
    'catalog_app', #modules 2
    'upload_app',
    # 'employee_app',

    'corsheaders', #connect secure header
    # 'inspectdb_refactor',
    'djoser',                       # third party package for user registration and authentication endpoints
    'rest_framework',               # rest API implementation library for django
    'rest_framework_simplejwt',     # JWT authentication backend library
    # 'storages',  #S3-AWS
    'rest_framework.authtoken',
    'hitcount',#Dùng cho import ugettext_lazy
]

# TEMPLATE_DIRS = ('/user_app/templates/',)
# TEMPLATE_LOADERS = (
#     'django.template.loaders.filesystem.Loader',
#     'django.template.loaders.app_directories.Loader',
# )

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'corsheaders.middleware.CorsMiddleware', #Dùng secure header
    'whitenoise.middleware.WhiteNoiseMiddleware', # Xử lý Middle cho load những file trong static
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}
# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': (
#         'rest_framework.permissions.IsAuthenticated',
#         # 'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
#     ),
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#         'rest_framework.authentication.BasicAuthentication',
#     ),
# }
# JWT_AUTH = {
#     # Authorization:Token xxx
#     'JWT_AUTH_HEADER_PREFIX': 'Token',
# }

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60)
}

# CORS_ORIGIN_ALLOW_ALL = False
# CORS_ORIGIN_WHITELIST = (
#     'http://localhost:4200',
# )
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",
]

ROOT_URLCONF = 'django_template_practice1.urls'

# TEMPLATE_LOADERS = (
#     'django.template.loaders.filesystem.Loader',
#     'django.template.loaders.app_directories.Loader',
#     'user_app.loader.Loader',
# )

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # '/user',
        ],
        # 'DIRS': [os.path.dirname(os.path.dirname(os.path.abspath(__file__))) + '/templates/',],
        'APP_DIRS': True,
        'OPTIONS': {
            # 'builtins': ['user_app.builtins'],
            # 'loaders': TEMPLATE_LOADERS,
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media', #Setup cho view {{ MEDIA_URL }}
            ],
        },
    },
]

WSGI_APPLICATION = 'django_template_practice1.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'django_template_practice1',
        'USER': 'postgres',
        'PASSWORD': 'laptrinh123456',
        'HOST': 'localhost',
        'PORT': '5433',
        'ATOMIC_REQUESTS': True, # transactional db
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/
# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'vi' #default language
LANGUAGES = (
  ('vi', ('Vietnamese')),
  ('fr', ('French')),
)

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# =================| Handling Static files |======================
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
STATIC_URL = '/static/' #static/
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# WHITENOISE_USE_FINDERS = True  #important mapping, cài đặt pip install whitenoise
# STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

# =================| Root media Configuration |======================
MEDIA_URL = "/media/"  #Kết hợp vs django.template.context_processors.media
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# MEDIA_ROOT = '/Projects/HDWebsoft/workspace/Python/python_django/django_template_practice1/media/'

# Upload Handlers
FILE_UPLOAD_HANDLERS = [
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler"
]
# =================| Email Configuration |=======================
# SECRET_KEY = os.environ.get('', '')
EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
EMAIL_FILE_PATH = os.path.join(BASE_DIR, "sent_emails")

DEFAULT_FROM_EMAIL  = 'no_reply@'
SERVER_EMAIL        = 'no_reply@'
ADMINS              = [('', SERVER_EMAIL), ]
MANAGERS            = ADMINS
EMAIL_HOST          = '' #'smtp.gmail.com' #MAIL_SERVER
EMAIL_HOST_USER     = SERVER_EMAIL
EMAIL_HOST_PASSWORD = ''
EMAIL_PORT          = 587 #25 465 587
EMAIL_USE_TLS       = True
# # MAIL_USE_SSL    = False
# MAIL_SUBJECT_PREFIX = '[django_web]'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ================================= Logging Configuration ========================================================
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': 'debug.log', #join(BASE_DIR, 'my_logs', 'debug.log'),
            'formatter': 'verbose'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}

try:
    from django_template_practice1.local_settings import *
except ImportError:
    pass